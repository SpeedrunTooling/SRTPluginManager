name: "Publish"

on:
  pull_request:
    branches:
      - "main"

jobs:
  release:
    name: "Release"
    runs-on: "windows-latest"
    env:
      working-directory: .
      project-name: SRTPluginManager
      publish-profile-name: x86
      is-prerelease: true

    steps:
    # Checkout latest code
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Set the main environment variables based on other environment variables
    - name: Set the main environment variables based on other environment variables
      run: |
        echo 'program-exe=${{env.project-name}}.exe' >> $GITHUB_ENV
        echo 'solution=${{env.project-name}}.sln' >> $GITHUB_ENV
        echo 'project=${{env.project-name}}/${{env.project-name}}.csproj' >> $GITHUB_ENV
        echo 'publish-directory=${{env.project-name}}/bin/Release/net5.0-windows/publish/' >> $GITHUB_ENV

    # Get the project's version number
    - name: Get project version
      id: get_version
      uses: greenygh0st/net-proj-release-version@v1
      with:
        PROJ_FILE: $env:project

    # Sets the zip-filename environment variable based on the project version
    - name: Sets the zip-filename environment variable based on the project version
      run: |
        echo 'zip-filename=${{env.project-name}}-v${{steps.get_version.outputs.RELEASE_VERSION}}.zip' >> $GITHUB_ENV

    # Install .NET
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Compiles the program and runs the publish profile
    - name: Compile and run publish profile
      run: |
        dotnet publish $env:solution /p:PublishProfile=$env:publish-profile-name

    # Zip the publish artifacts
    - name: Zip the publish artifacts
      run: |
        Add-Type -assembly 'System.IO.Compression'
        Add-Type -assembly 'System.IO.Compression.FileSystem'
        [System.IO.Compression.ZipArchive]$zipFile = [System.IO.Compression.ZipFile]::Open('$env:zip-filename', ([System.IO.Compression.ZipArchiveMode]::Create))
        [System.IO.Compression.ZipFileExtensions]::CreateEntryFromFile($zipFile, '${{env.publish-directory}}${{program-exe}}', '${{program-exe}}')
        [System.IO.Compression.ZipFileExtensions]::CreateEntryFromFile($zipFile, 'LICENSE', 'LICENSE')
        $zipFile.Dispose()

    # Pushes the release
    - name: Publish release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: $env:is-prerelease
        title: 'Automated Build - v${{steps.get_version.outputs.RELEASE_VERSION}}'
        files: |
          '$env:zip-filename'
